[{"content":"1、进入目录 1 cd /usr/local/lib64/ 2、下载最新版本的libstdc.so_.6.0.26 1 wget http://www.vuln.cn/wp-content/uploads/2019/08/libstdc.so_.6.0.26.zip 3、下载完成之后要进行解压 1 unzip libstdc.so_.6.0.26.zip 4、将下载的最新版本拷贝到 /usr/lib64 1 cp libstdc++.so.6.0.26 /usr/lib64 5、进入/usr/lib64目录 1 cd /usr/lib64 6、查看 /usr/lib64下libstdc++.so.6链接的版本 1 ls -l | grep libstdc++ 7、删除原先的软连接(不放心可以备份) 1 rm libstdc++.so.6 8、使用最新的库建立软连接 1 ln -s libstdc++.so.6.0.26 libstdc++.so.6 9、查看新版本，成功 1 strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX 完整代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 cd /usr/local/lib64/ # 下载最新版本的`下载最新版本的libstdc.so_.6.0.26` wget http://www.vuln.cn/wp-content/uploads/2019/08/libstdc.so_.6.0.26.zip # 解压 unzip libstdc.so_.6.0.26.zip # 将下载的最新版本拷贝到 /usr/lib64 cp libstdc++.so.6.0.26 /usr/lib64 cd /usr/lib64 # 查看 /usr/lib64下libstdc++.so.6链接的版本 ls -l | grep libstdc++ # 删除原先的软连接(不放心可以备份) rm libstdc++.so.6 # 使用最新的库建立软连接 ln -s libstdc++.so.6.0.26 libstdc++.so.6 # 查看新版本，成功 strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX ","permalink":"/blog/posts/centos-libstdc/","summary":"记录一下在centos7默认的libstdc的版本太老该如何解决","title":"centos7默认的libstdc的版本太老解决办法"},{"content":"基本使用 1、导入相关依赖 1 2 3 4 5 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;mysql\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;mysql-connector-java\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.1.48\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 2、注册驱动 1 Class.forName(\u0026#34;com.mysql.jdbc.Driver\u0026#34;); 3、获取连接 1 2 3 4 String url = \u0026#34;jdbc:mysql://127.0.0.1:3306/db1\u0026#34;; String username = \u0026#34;root\u0026#34;; String password = \u0026#34;123456\u0026#34;; Connection connection = DriverManager.getConnection(url, username, password); 4、定义sql 1 String sql = \u0026#34;select * from tb_user;\u0026#34;; 5、获取执行sql的对象 statement 1 Statement statement = connection.createStatement(); 6、执行sql 1 2 3 4 5 ResultSet resultSet = statement.executeQuery(sql); while (resultSet.next()) { String name = resultSet.getString(\u0026#34;name\u0026#34;); System.out.println(name); } 7、释放资源 1 2 3 resultSet.close(); statement.close(); connection.close(); 完整代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //1. 注册驱动 Class.forName(\u0026#34;com.mysql.jdbc.Driver\u0026#34;); //2. 获取连接 String url = \u0026#34;jdbc:mysql://127.0.0.1:3306/db1\u0026#34;; String username = \u0026#34;root\u0026#34;; String password = \u0026#34;123456\u0026#34;; Connection connection = DriverManager.getConnection(url, username, password); //3. 定义sql String sql = \u0026#34;select * from tb_user;\u0026#34;; //4. 获取执行sql的对象 statement Statement statement = connection.createStatement(); //5. 执行sql ResultSet resultSet = statement.executeQuery(sql); while (resultSet.next()) { String name = resultSet.getString(\u0026#34;name\u0026#34;); System.out.println(name); } //6.释放资源 resultSet.close(); statement.close(); connection.close(); ","permalink":"/blog/posts/jdbc-basic-used/","summary":"简单记录一下jdbc的基本使用教程","title":"JDBC的基本使用"},{"content":"什么是 Node? Node（正式名称 Node.js）是一个开源的、跨平台的运行时环境，有了它，开发人员可以使用 JavaScript 创建各种服务器端工具和应用程序。此运行时主要用于浏览器上下文之外（即可以直接运行于计算机或服务器操作系统上）。据此，该环境省略了一些浏览器专用的 JavaScript API，同时添加了对更传统的 OS API（比如 HTTP 库和文件系统库）的支持。\n在linux安装nodejs 下载和解压 首先将压缩包下载下来\n1 wget https://nodejs.org/download/release/v14.21.3/node-v14.21.3-linux-x64.tar.gz 然后再解压\n1 tar -zxvf node-v14.21.3-linux-x64.tar.gz 移动目录 创建目录 1 mkdir /usr/local/lib/node 移动目录并重命名 1 mv node-v14.17.4-linux-x64 /usr/local/lib/node/nodejs 这里执行了两个步骤，首先将文件移动到node文件夹，然后将文件重命名为nodejs\n修改环境变量 设置环境变量 注意：这一步需要管理员权限或者对该文件的写入权限。\n首先执行vim命令\n1 sudo vim /etc/profile 然后在文件底部添加环境变量\n1 2 export NODEJS_HOME=/usr/local/lib/node/nodejs export PATH=$NODEJS_HOME/bin:$PATH 执行命令（下方清单命令为保存退出）冒号 esc ： wq\n刷新修改 1 source /etc/profile 安装完成，查看版本号 node版本号\n1 node -v npm版本号\n1 npm -v 最终效果如下 ","permalink":"/blog/posts/linux-install-nodejs/","summary":"简单记录一下如何在Linux中安装nodejs的过程","title":"如何在linux上安装nodejs"}]